@charset "utf-8";

// 색상 맵 정의
$colors: (
  primary: #00c850,
  secondary: grey,
  white: #ffffff,
  light-white: #eeeeee,
  dark-white: #bdbdbd,
  beige: #f3d7bc,
  red: #dc143c,
  dark-red: #9a0e2a,
  brown: #583939,
  dark-grey: #4d4d4d,
  grey: #616161,
  light-grey: #7c7979,
  black: #000000,
  dark-black: #151515,
);

// 색상 함수
// ex) color(primary);
@function color($color_name) {
  @return map-get($colors, $color_name);
}

// 폰트 크기 맵 정의
$fonts: (
  large: 48px,
  medium: 28px,
  regular: 18px,
  small: 16px,
  micro: 14px,
);

// 폰트 함수
// ex) @include font(primary);
@function get-font-size($font_name) {
  @return map-get($fonts, $font_name);
}

// 폰트 스타일 적용 믹스인
@mixin apply-font($font_size, $weight: 700) {
  font-size: $font_size;
  font-weight: $weight;
  line-height: $font_size * 1.5;
  letter-spacing: -($font_size * 0.03);
}

// 폰트 스타일 설정 믹스인
@mixin font($type: primary, $weight: 700) {
  @if map-has-key($fonts, $type) {
    $font_size: get-font-size($type);
    @include apply-font($font_size, $weight);
    
    @include mobile768 {
      $responsive_font_sizes: (
        large: 30px,
        medium: 18px,
        regular: 16px,
        small: 14px,
        micro: 12px
      );
      
      @if map-has-key($responsive_font_sizes, $type) {
        $font_size: map-get($responsive_font_sizes, $type);
      }
      
      @include apply-font($font_size, $weight);
    }
  } @else {
    @warn "Font '#{$type}' not found in $fonts.";
  }
}

// Size
$size-border-radius: 4px;

// Animation
$animation-duration: 300ms;

// breakpoints
$mobile-breakpoints : 768px;

@mixin mobile768 {
  @media (max-width: #{$mobile-breakpoints - 1px}) {
    @content;
  }
}

// 가로 세로 비율 정의
$ratios: (
  ratio-type1: 2000/1300, // 너비 대 높이의 비율 (예: 3:2 = 1.5)
);

// 가로 세로 비율 함수
// ex) ratio(primary);
@function get-ratio($ratio_name) {
  @return map-get($ratios, $ratio_name);
}

// 가로 세로 비율 적용 믹스인
@mixin calculate-height($width, $aspect-ratio) {
  height: ($width / $aspect-ratio); // 너비를 비율로 나누어서 높이를 계산
}

// 가로 세로 비율 설정 믹스인
@mixin ratio($width, $type: ratio-4-3) {
  @if map-has-key($ratios, $type) {
    $aspect-ratio: get-ratio($type);
    @include calculate-height($width, $aspect-ratio);
  } @else {
    @warn "Ratio '#{$type}' not found in $ratios.";
  }
}