1. Install nuxtjs/Storybook
# Add Storybook:
> npm install --save-dev @nuxtjs/storybook

1-2. Next, add .nuxt-storybook and storybook-static to your .gitignore
.nuxt-storybook
storybook-static


1-3. First, we need to add the stories for our components
1-4. Then, add storybook section in nuxt.config.js
export default {
  storybook: {
    // Options
    components: true,
  }
}

2. Then we can run the development
> npx nuxt storybook

2-1. Use core-js@3
> npm run--save-dev core-js@3 @babel/runtime-corejs3

3. Deploy Storybook
3-1. Exporting as a static app
> npx nuxt storybook build

3-2. Set up a repository in GitHub
> echo "# test" >> README.md
> git init
> git add .
> git commit -m "first commit"
> git branch -M main
> git remote add origin https://github.com/k-forest/test.git
> git push -u origin main

3-3. Get Chromatic
> npm install -D chromatic

3-4. Copy the unique project-token
https://www.chromatic.com/start/?utm_source=storybook_website&utm_medium=link&utm_campaign=storybook

3-5. project-token that was generated for your project. 
Then execute it by issuing the following in the command line to build and deploy our Storybook
> npx chromatic --project-token=토큰번호


4. Figma + storybook
4-1. Figma <- storybook
> Figma에서 Plugin 'storybook connect' 설치
> Figma 디자인과 일치하는 stroybook URL 붙여넣기
Paste a story URL that matches the Figma design.
4-2. Figma -> storybook
> https://storybook.js.org/addons/storybook-addon-designs/



참고)
https://storybook.nuxtjs.org/getting-started/installation
https://github.com/nuxt/components#usage
https://krutiepatel.com/blog/create-card-component-story-using-storybook-with-nuxt/